#!/bin/bash

# An example hook script to verify what is about to be pushed.  Called by "git
# push" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   <local ref> <local sha1> <remote ref> <remote sha1>
#
# This sample shows how to prevent push of commits where the log message starts
# with "WIP" (work in progress).


echo "Run pre-push"

#DOCUMENT 
#https://stackoverflow.com/questions/1800783/how-to-compare-a-local-git-branch-with-its-remote-branch


declare -i flag=0

#test=$(git diff --name-only @ @{upstream})
#test=$(git diff --name-only @ @{push})
#for i in  $test ;do
# echo $i
#done

GLOBAL_LOG=""


LIST_SCML_FILES=$(git diff --name-only @ @{push} | grep -E '\.scml$')

FILE_XHLD=$(git diff --name-only @ @{push} | grep -E 'abc.xhld')
FILE_GEN=$(git diff --name-only @ @{push} | grep -E 'abc.scml')



# check if vsr and gen file exist 
if [[ -z $FILE_XHLD ]]  && [[ -z $FILE_GEN ]]
then
  echo "OKKK"
fi


NOT_ALLOW_LIST=( "Scope3_Nissan_HighRes" "PIVI2")
ALLOW_FOR_GADGET="/AppHmi_Umbrella/PIVI2/GUI"


# check if SCML file can be pushed
for FILE in $LIST_SCML_FILES; do
  for ITEM in  "${NOT_ALLOW_LIST[@]}";do
      if  grep -E -q "\b${ITEM}\b" <<<${FILE} >/dev/null 2>&1 
      then
        if ! grep -E -q "\b${ALLOW_FOR_GADGET}\b" <<<${FILE} >/dev/null 2>&1 
        then
            echo "'$FILE' => Not allow to change the :'$ITEM'  !!"
            flag=1
        fi
      fi
    done
done


if [ $flag -eq 1 ] ; then
  echo "You are prevented to push the change to remote"
fi  
#exit $flag


#exit 1
